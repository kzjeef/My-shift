//
//  SSCalendarSyncController.h
//  ShiftScheduler
//
//  Created by Jiejing Zhang on 14-2-23.
//
//

#import <Foundation/Foundation.h>


#define kSSCalendarAutoSyncSettingChangedNotification @"SSCalendarAutoSyncSettingChangedNotification"
#define kSSCalendarWithAlarmSettingChangedNotification @"SSCalendarAlarmSettingChangedNotification"
#define kSSCalendarSyncLengthSettingChangedNotification @"SSCalendarSyncLengthSettingChangedNotification"

#define kSSCalendarSyncStartNotification  @"SSCalendarSyncBegin"
#define kSSCalendarSyncStopNotification   @"SSCalendarSyncEnd"

#define kSSCalendarSyncNoCalenarAccess @"SSCalendarNotCalendarAccess"

#define kSSCalendarAutoSyncSetting @"SSCalendarAutoSyncSetting"
#define kSSCalendarWithAlarmSetting @"SSCalendarAlarmSetting"
#define kSSCalendarSyncLengthSetting @"SSCalendarSyncLengthSetting"

enum {
    SSCalendarSyncErrorUnkown = -1,
    SSCalendarSyncErrorNoAccessCalendar = -2,
};

typedef NS_ENUM(NSInteger, SSCalendarEventType) {
    SSCalendarEventTypeSetup = 1,
        SSCalendarEventTypeDelete,
        SSCalendarEventTypeAlarm,
        SSCalendarEventTypeDays,
};

@class OneJob;

/**
 * SSCalendarSyncController is the class manage sync shift to iOS OS calendar,
 */
@interface SSCalendarSyncController : NSObject <NSFetchedResultsControllerDelegate>

- (id) initWithManagedContext: (NSManagedObjectContext *) context;

/**
   just setup all enabled shift's ekevent
 */
- (int) setupAllEKEvent: (BOOL) isNotify;

/**
   delete all events generated by this controller.
 */
- (int) deleteAllEKEvents;

/**
   get shift list for other UI.
*/
- (NSArray *) getAllShiftList;

/**
 get managed object with ID
 */
- (OneJob *) getShiftWithID: (NSManagedObjectID *) objectID;

/**
   save shift change
*/
- (void) saveShiftChange;

/**
 get current settting value of auto sync
 */
+ (int) getAutoSyncSetting;

/**
 get current setting value of alarm of sync
 */
+ (int) getAlarmSyncSetting;

/**
 get current setting value of sync length 
 */
+ (int) getSyncLengthSetting;


@end
